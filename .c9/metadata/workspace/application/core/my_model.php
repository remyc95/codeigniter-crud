{"filter":false,"title":"my_model.php","tooltip":"/application/core/my_model.php","undoManager":{"mark":8,"position":8,"stack":[[{"start":{"row":0,"column":0},"end":{"row":2,"column":35},"action":"insert","lines":["class MY_Model extends CI_Model {","    const DB_TABLE = 'abstract';","    const DB_TABLE_PK = 'abstract';"],"id":1}],[{"start":{"row":2,"column":35},"end":{"row":3,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":3,"column":0},"end":{"row":3,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":3,"column":4},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":4,"column":0},"end":{"row":4,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":4,"column":4},"end":{"row":4,"column":5},"action":"insert","lines":["}"],"id":4}],[{"start":{"row":4,"column":0},"end":{"row":4,"column":4},"action":"remove","lines":["    "],"id":5}],[{"start":{"row":3,"column":4},"end":{"row":4,"column":0},"action":"remove","lines":["",""],"id":6}],[{"start":{"row":3,"column":4},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":7},{"start":{"row":4,"column":0},"end":{"row":4,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":4,"column":0},"end":{"row":4,"column":4},"action":"remove","lines":["    "],"id":8}],[{"start":{"row":0,"column":0},"end":{"row":4,"column":1},"action":"remove","lines":["class MY_Model extends CI_Model {","    const DB_TABLE = 'abstract';","    const DB_TABLE_PK = 'abstract';","    ","}"],"id":9},{"start":{"row":0,"column":0},"end":{"row":87,"column":1},"action":"insert","lines":["<?php","","class MY_Model extends CI_Model {","    const DB_TABLE = 'abstract';","    const DB_TABLE_PK = 'abstract';","    ","    /**","     * Create record.","     */","    private function insert() {","        $this->db->insert($this::DB_TABLE, $this);","        $this->{$this::DB_TABLE_PK} = $this->db->insert_id();","    }","    ","    /**","     * Update record.","     */","    private function update() {","        $this->db->update($this::DB_TABLE, $this, $this::DB_TABLE_PK);","    }","    ","    /**","     * Populate from an array or standard class.","     * @param mixed $row","     */","    public function populate($row) {","        foreach ($row as $key => $value) {","            $this->$key = $value;","        }","    }","    ","    /**","     * Load from the database.","     * @param int $id","     */","    public function load($id) {","        $query = $this->db->get_where($this::DB_TABLE, array(","            $this::DB_TABLE_PK => $id,","        ));","        $this->populate($query->row());","    }","    ","    /**","     * Delete the current record.","     */","    public function delete() {","        $this->db->delete($this::DB_TABLE, array(","           $this::DB_TABLE_PK => $this->{$this::DB_TABLE_PK}, ","        ));","        unset($this->{$this::DB_TABLE_PK});","    }","    ","    /**","     * Save the record.","     */","    public function save() {","        if (isset($this->{$this::DB_TABLE_PK})) {","            $this->update();","        }","        else {","            $this->insert();","        }","    }","    ","    /**","     * Get an array of Models with an optional limit, offset.","     * ","     * @param int $limit Optional.","     * @param int $offset Optional; if set, requires $limit.","     * @return array Models populated by database, keyed by PK.","     */","    public function get($limit = 0, $offset = 0) {","        if ($limit) {","            $query = $this->db->get($this::DB_TABLE, $limit, $offset);","        }","        else {","            $query = $this->db->get($this::DB_TABLE);","        }","        $ret_val = array();","        $class = get_class($this);","        foreach ($query->result() as $row) {","            $model = new $class;","            $model->populate($row);","            $ret_val[$row->{$this::DB_TABLE_PK}] = $model;","        }","        return $ret_val;","    }","}"]}]]},"ace":{"folds":[],"scrolltop":120,"scrollleft":0,"selection":{"start":{"row":12,"column":5},"end":{"row":12,"column":5},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1465100907715,"hash":"8e7ae4732d42c607eae63de2e4f0faa278b4235d"}